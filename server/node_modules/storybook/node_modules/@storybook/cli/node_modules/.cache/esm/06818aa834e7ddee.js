let fse,path,npmInit,getVersion,getPackageJson,writePackageJson,getBabelDependencies,installDependencies;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("fs-extra",[["default",["fse"],function(v){fse=v}]]);_34e‍.w("path",[["default",["path"],function(v){path=v}]]);_34e‍.w("../../lib/npm_init",[["default",["npmInit"],function(v){npmInit=v}]]);_34e‍.w("../../lib/helpers",[["getVersion",["getVersion"],function(v){getVersion=v}],["getPackageJson",["getPackageJson"],function(v){getPackageJson=v}],["writePackageJson",["writePackageJson"],function(v){writePackageJson=v}],["getBabelDependencies",["getBabelDependencies"],function(v){getBabelDependencies=v}],["installDependencies",["installDependencies"],function(v){installDependencies=v}]]);










const _34e‍anonymous=async npmOptions => {
  const storybookVersion = await getVersion(npmOptions, '@storybook/html');
  fse.copySync(path.resolve(__dirname, 'template/'), '.', { overwrite: true });

  let packageJson = getPackageJson();
  if (!packageJson) {
    await npmInit();
    packageJson = getPackageJson();
  }

  packageJson.dependencies = packageJson.dependencies || {};
  packageJson.devDependencies = packageJson.devDependencies || {};

  packageJson.scripts = packageJson.scripts || {};
  packageJson.scripts.storybook = 'start-storybook -p 6006';
  packageJson.scripts['build-storybook'] = 'build-storybook';

  writePackageJson(packageJson);

  const babelDependencies = await getBabelDependencies(npmOptions, packageJson);

  installDependencies(npmOptions, [`@storybook/html@${storybookVersion}`, ...babelDependencies]);
};_34e‍.d(_34e‍anonymous);

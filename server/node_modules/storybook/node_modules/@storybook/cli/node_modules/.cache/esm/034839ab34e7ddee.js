let fse,path,getVersions,getPackageJson,writePackageJson,getBabelDependencies,installDependencies;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("fs-extra",[["default",["fse"],function(v){fse=v}]]);_34e‍.w("path",[["default",["path"],function(v){path=v}]]);_34e‍.w("../../lib/helpers",[["getVersions",["getVersions"],function(v){getVersions=v}],["getPackageJson",["getPackageJson"],function(v){getPackageJson=v}],["writePackageJson",["writePackageJson"],function(v){writePackageJson=v}],["getBabelDependencies",["getBabelDependencies"],function(v){getBabelDependencies=v}],["installDependencies",["installDependencies"],function(v){installDependencies=v}]]);









const _34e‍anonymous=async npmOptions => {
  const [
    storybookVersion,
    actionsVersion,
    linksVersion,
    addonsVersion,
    tagLoaderVersion,
  ] = await getVersions(
    npmOptions,
    '@storybook/riot',
    '@storybook/addon-actions',
    '@storybook/addon-links',
    '@storybook/addons',
    'riot-tag-loader'
  );

  fse.copySync(path.resolve(__dirname, 'template/'), '.', { overwrite: true });

  const packageJson = getPackageJson();

  packageJson.dependencies = packageJson.dependencies || {};
  packageJson.devDependencies = packageJson.devDependencies || {};

  const dependencies = [
    `@storybook/riot@${storybookVersion}`,
    `@storybook/addon-actions@${actionsVersion}`,
    `@storybook/addon-links@${linksVersion}`,
    `@storybook/addons@${addonsVersion}`,
  ];
  if (
    !packageJson.devDependencies['riot-tag-loader'] &&
    !packageJson.dependencies['riot-tag-loader']
  )
    dependencies.push(`riot-tag-loader@${tagLoaderVersion}`);

  packageJson.scripts = packageJson.scripts || {};
  packageJson.scripts.storybook = 'start-storybook -p 6006';
  packageJson.scripts['build-storybook'] = 'build-storybook';

  writePackageJson(packageJson);

  const babelDependencies = await getBabelDependencies(npmOptions, packageJson);

  installDependencies(npmOptions, [...dependencies, ...babelDependencies]);
};_34e‍.d(_34e‍anonymous);
